<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customcontrols="clr-namespace:Walkman.UI.Controls.CustomControls"
                    xmlns:customcontrolslib="clr-namespace:Walkman.Wpf.CustomControls.Controls;assembly=Walkman.Wpf.CustomControls"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:b="clr-namespace:Walkman.UI.Behavors">
    <Style x:Key="TransparentBorder"
           TargetType="Border">
        <Setter Property="CornerRadius"
                Value="15" />
        <Setter Property="Background"
                Value="#ffffff" />
        <!--<Setter Property="Opacity" Value="0.65"/>-->
        <Setter Property="Padding"
                Value="25" />
    </Style>

    <!--<Style x:Key="noChrome"
           TargetType="{x:Type customcontrolslib:CustomizableButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customcontrolslib:CustomizableButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style  
           TargetType="{x:Type customcontrols:CustomizableButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="TextBlock.TextAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customcontrols:CustomizableButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel  HorizontalAlignment="Stretch">
                            <ContentPresenter x:Name="contentPresenter"
                                              Width="{TemplateBinding IconWidth}"
                                              Height="{TemplateBinding IconHeight}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding IconContent}" />
                            <TextBlock HorizontalAlignment="{TemplateBinding HorizontalTextAlignment}"
                                       VerticalAlignment="Center"
                                       FontWeight="{TemplateBinding TextContentFontWeight}"
                                       Margin="{TemplateBinding TextContentMargin}"
                                       Text="{TemplateBinding TextContent}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <SolidColorBrush x:Key="ScrollBar.Static.Background"
                     Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Border"
                     Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph"
                     Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb"
                     Color="#878787" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background"
                     Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border"
                     Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph"
                     Color="#000000" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb"
                     Color="#878787" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background"
                     Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border"
                     Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb"
                     Color="#878787" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph"
                     Color="#FFFFFF" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background"
                     Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border"
                     Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph"
                     Color="#BFBFBF" />

    <Style x:Key="ScrollBarThumbVertical"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle"
                               RadiusX="3"
                               RadiusY="3"
                               Fill="{StaticResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}"
                               SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle RadiusX="3"
                               RadiusY="3"
                               x:Name="rectangle"
                               Fill="{StaticResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}"
                               SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Width"
                Value="6" />
        <Setter Property="MinWidth"
                Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          SnapsToDevicePixels="true">
                        <Border CornerRadius="3"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Row="0">
                            <Border.Background>
                                <SolidColorBrush Color="White"
                                                 Opacity="0.65" />
                            </Border.Background>
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}"
                                   Grid.Row="0">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="10"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.00001*"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0"/>
                                <Track x:Name="PART_Track" Grid.Column="0" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="ScrollViewerStyle"
           TargetType="{x:Type customcontrols:CustomScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customcontrols:CustomScrollViewer}">
                    <Grid x:Name="Grid"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner"
                                   Grid.Column="1"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                   Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanHorizontallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                CanVerticallyScroll="False"
                                                Grid.Column="0"
                                                Content="{TemplateBinding Content}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                Margin="{TemplateBinding Padding}"
                                                Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="1"
                                   Style="{DynamicResource ScrollBarStyle}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Grid.Row="0"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="0"
                                   Style="{DynamicResource ScrollBarStyle}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border"
                     Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border"
                     Color="#FFD9D9D9" />
    <Style x:Key="SmoothListBox"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="false" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="1"
                            SnapsToDevicePixels="true">
                        <customcontrols:CustomScrollViewer Focusable="false"
                                                           Style="{DynamicResource ScrollViewerStyle}"
                                                           Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </customcontrols:CustomScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping"
                                           Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="Item.MouseOver.Background"
                     Color="#1F26A0DA" />
    <SolidColorBrush x:Key="Item.MouseOver.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background"
                     Color="#3D26A0DA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background"
                     Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border"
                     Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Foreground"
                     Color="#6682DB" />
    <Color x:Key="Item.SelectedInactive.ForegroundColor">#6682DB</Color>
    <Style x:Key="TrackListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <DockPanel x:Name="contentContainer"
                               LastChildFill="True"
                               Background="Transparent">
                        <Border Height="1"
                                BorderBrush="#A2A2AD"
                                BorderThickness="1"
                                DockPanel.Dock="Bottom" />
                        <TextBlock DockPanel.Dock="Left"
                                   TextAlignment="Center"
                                   Margin="10,15,20,15"
                                   Text="{Binding Path=Number, FallbackValue=1.}" />
                        <StackPanel DockPanel.Dock="Left"
                                    VerticalAlignment="Center">
                            <TextBlock Text="{Binding Path=Title, FallbackValue=Floration}" />
                            <TextBlock Text="{Binding Path=Artist, FallbackValue=Vacation}"
                                       FontSize="9" />
                        </StackPanel>
                        <TextBlock Text="{Binding Path=Time, FallbackValue=1:15}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="20,0,25,0"
                                   DockPanel.Dock="Right" />
                        <customcontrolslib:CustomizableButton Height="15"
                                                           Width="15"
                                                           Padding="0,2,0,0"
                                                           HorizontalAlignment="Right"
                                                           DockPanel.Dock="Right">
                            <Viewbox Stretch="Uniform">
                                <Path Fill="Black"
                                      x:Name="Heart"
                                      Data="m348.151,31.514c-19.883,-19.884 -46.315,-30.826 -74.435,-30.826c-28.124,0 -54.559,10.942 -74.449,30.826l-9.798,
                  9.8l-9.798,-9.8c-19.884,-19.884 -46.325,-30.826 -74.443,-30.826c-28.117,0 -54.56,10.942 -74.442,30.826c-41.049,
                  41.053 -41.049,107.848 0,148.885l147.09,147.091c2.405,2.414 5.399,3.892 8.527,4.461c1.049,0.207 2.104,0.303 3.161,
                  0.303c4.161,0 8.329,-1.587 11.498,-4.764l147.09,-147.091c41.051,-41.037 41.051,-107.832 -0.001,-148.885zm-22.996,
                  125.89l-135.685,135.687l-135.688,-135.687c-28.368,-28.364 -28.368,-74.514 0,-102.893c13.741,-13.739 32.017,-21.296 51.446,
                  -21.296c19.431,0 37.702,7.557 51.438,21.296l21.305,21.312c6.107,6.098 16.897,6.098 23.003,0l21.297,-21.312c13.737,
                  -13.739 32.009,-21.296 51.446,-21.296c19.431,0 37.701,7.557 51.438,21.296c28.371,28.379 28.371,74.528 0,102.893z" />
                            </Viewbox>
                        </customcontrolslib:CustomizableButton>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Shape.Fill"
                                    TargetName="Heart"
                                    Value="{StaticResource Item.SelectedInactive.Foreground}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource Item.SelectedInactive.ForegroundColor}"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Black"
                                                    Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                    Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="contentContainer"
                                    Value="{StaticResource Item.SelectedInactive.Foreground}" />
                            <Setter Property="Shape.Fill"
                                    TargetName="Heart"
                                    Value="{StaticResource Item.SelectedInactive.Foreground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentContainer"
                                    Value="{StaticResource Item.SelectedInactive.Foreground}" />
                            <Setter Property="Shape.Fill"
                                    TargetName="Heart"
                                    Value="{StaticResource Item.SelectedInactive.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>